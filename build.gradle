plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.civia.mandate'
version = System.getenv('CURRENT_VERSION')
def docker_user = System.getenv('DOCKER_USER')

task kubernetesDeploy(type: Exec) {
	commandLine "kubectl", "set", "image", "deployment/rag-civia-mandate-service", "rag-civia-mandate-service=${docker_user}/${rootProject.name}:${version}"
}

task dockerBuildImage(type: Exec) {
	commandLine "docker", "build", "--build-arg", "VERSION=${version}", ".", "-t", "${docker_user}/${rootProject.name}:${version}"
}

task dockerPushImage(type: Exec) {
	dependsOn dockerBuildImage
	commandLine "docker", "push", "${docker_user}/${rootProject.name}:${version}"
}

tasks.named('build') {
	dependsOn tasks.dockerPushImage
	dependsOn tasks.kubernetesDeploy
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.0-M6")
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.google.firebase:firebase-admin:9.4.3'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.opencagedata:jopencage:2.2.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
